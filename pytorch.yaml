---
# Source: pytorch/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-pytorch
  namespace: "harbor"
  labels:
    app.kubernetes.io/name: pytorch
    helm.sh/chart: pytorch-3.2.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: pytorch/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-pytorch
  namespace: "harbor"
  labels:
    app.kubernetes.io/name: pytorch
    helm.sh/chart: pytorch-3.2.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: master
spec:
  type: ClusterIP
  ports:
    - port: 49875
      targetPort: pytorch
      name: pytorch
      nodePort: null
  selector:
    app.kubernetes.io/name: pytorch
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: master
---
# Source: pytorch/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-pytorch
  namespace: "harbor"
  labels:
    app.kubernetes.io/name: pytorch
    helm.sh/chart: pytorch-3.2.8
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: master
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: pytorch
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: master
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pytorch
        helm.sh/chart: pytorch-3.2.8
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: master
    spec:
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: pytorch
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: master
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      containers:
        - name: master
          image: docker.io/bitnami/pytorch:2.0.1-debian-11-r23
          imagePullPolicy: "IfNotPresent"
          securityContext:
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1001
          command:
            - bash
            - -c
            - |
              sleep infinity
          env:
          envFrom:
          resources:
            limits: {}
            requests: {}
          ports:
            - name: pytorch
              containerPort: 49875
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - python
                - -c
                - import torch; torch.__version__
          readinessProbe:
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
            exec:
              command:
                - python
                - -c
                - import torch; torch.__version__
          startupProbe:
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
            exec:
              command:
                - python
                - -c
                - import torch; torch.__version__
          volumeMounts:
            - name: data
              mountPath: /bitnami/pytorch
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: release-name-pytorch
