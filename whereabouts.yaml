---
# Source: whereabouts/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-whereabouts
  namespace: "harbor"
  labels:
    app.kubernetes.io/name: whereabouts
    helm.sh/chart: whereabouts-0.4.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  annotations:
automountServiceAccountToken: true
---
# Source: whereabouts/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-whereabouts-harbor
  labels:
    app.kubernetes.io/name: whereabouts
    helm.sh/chart: whereabouts-0.4.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - whereabouts.cni.cncf.io
    resources:
      - ippools
      - overlappingrangeipreservations
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - list
      - watch
  - apiGroups:
      - k8s.cni.cncf.io
    resources:
      - network-attachment-definitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
---
# Source: whereabouts/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-whereabouts-harbor
  labels:
    app.kubernetes.io/name: whereabouts
    helm.sh/chart: whereabouts-0.4.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-whereabouts-harbor
subjects:
  - kind: ServiceAccount
    name: release-name-whereabouts
    namespace: "harbor"
---
# Source: whereabouts/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: release-name-whereabouts
  namespace: "harbor"
  labels:
    app.kubernetes.io/name: whereabouts
    helm.sh/chart: whereabouts-0.4.3
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: whereabouts
      app.kubernetes.io/instance: release-name
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: whereabouts
        helm.sh/chart: whereabouts-0.4.3
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
      annotations:
    spec:
      
      hostNetwork: true
      serviceAccountName: release-name-whereabouts
      securityContext:
        fsGroup: 0
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: whereabouts
                    app.kubernetes.io/instance: release-name
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      priorityClassName: ""
      initContainers:
      containers:
        - name: whereabouts
          image: docker.io/bitnami/whereabouts:0.6.2-debian-11-r11
          imagePullPolicy: "IfNotPresent"
          command:
            - /bin/bash
          args:
            - -ec
            - |
              #!/bin/bash
              SLEEP=false bash /install-cni.sh && /ip-control-loop
          securityContext:
            privileged: true
            runAsNonRoot: false
            runAsUser: 0
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: NODENAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: WHEREABOUTS_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
          livenessProbe:
            exec:
              command:
                - pgrep
                - ip-control-loop
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: cni-bin-dir
              mountPath: /bitnami/whereabouts/host/opt/cni/bin
            - name: cni-net-dir
              mountPath: /bitnami/whereabouts/host/etc/cni/net.d
      volumes:
        - name: cni-bin-dir
          hostPath:
            path: /opt/cni/bin
        - name: cni-net-dir
          hostPath:
            path: /etc/cni/net.d
